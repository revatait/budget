open('learning.RData.')
load('learning.RData.')
ls()
str(exp)
ggplot(exp, aes(x = Category, y = Month)) + geom_point(aes(size = abs, color = Subclass, alpha = .02))
library(ggplot)
library(ggplot2)
ggplot(exp, aes(x = Category, y = Month)) + geom_point(aes(size = abs, color = Subclass, alpha = .02))
install.packages('ggplot2', dependencies = TRUE)
library(ggplot2)
ggplot(exp, aes(x = Category, y = Month)) + geom_point(aes(size = abs, color = Subclass, alpha = .02))
ggplot(exp, aes(x = Category, y = Month)) + geom_point(aes(size = abs, color = Subclass, alpha = .02)) + geom_text(hjust = 1, size = 2) + scale_size(range = c(1,15))
ggplot(exp, aes(x = Category, y = Month)) + geom_point(aes(size = abs, color = Subclass, alpha = .02)) + geom_text(hjust = 1, size = 2, label= Model) + scale_size(range = c(1,15))
ggplot(exp, aes(x = Category, y = Month, label = abs)) + geom_point(aes(size = abs, color = Subclass, alpha = .02)) + geom_text(hjust = 1, size = 2) + scale_size(range = c(1,15))
ggplot(exp, aes(x = Category, y = Month)) + geom_count()
ggplot(exp, aes(x = Category, y = Month)) + geom_count() + stat_sum(abs)
ggplot(exp, aes(x = Category, y = Month)) + geom_count() + stat_summary(fun.y = sum)
ggplot(exp, aes(x = Category, y = Month)) + stat_summary(fun.y = sum, geom='point')
ggplot(exp, aes(x = Category, y = Month, z=abs)) + stat_summary(fun.y = sum, geom='point')
ggplot(exp, aes(x = Month, y = abs)) + stat_summary(fun.y = sum, geom='point')
ggplot(exp, aes(x = Date, y = abs)) + stat_summary(fun.y = sum, geom='point')
ggplot(exp, aes(x = Date, y = abs)) + geom_count()
install.packages('plotly', dependencies=TRUE)
plot_ly(exp, x = ~Month, y= ~Category, text= ~Class, type = 'scatter', mode = 'markers', marker=list(size = ~abs, opacity = 0.5))
library(plot_ly)
library(plotly)
plot_ly(exp, x = ~Month, y= ~Category, text= ~Class, type = 'scatter', mode = 'markers', marker=list(size = ~abs, opacity = 0.5))
plot_ly(exp, x = ~Month, y= ~Category, text= ~abs, type = 'scatter', mode = 'markers', marker=list(size = ~abs, opacity = 0.5))
plot_ly(exp, x = ~Month, y= ~Category, text= ~abs, type = 'scatter', mode = 'markers', size= ~abs, marker=list(size = ~abs, opacity = 0.5))
ggplot(exp, aes(Category, abs)) + geom_point()
ip <- as.data.frame(installed.packages())
ip
ip <- ip[is.na[ip$Priority),1:2,drop=FALSE]
ip <- ip[is.na(ip$Priority),1:2,drop=FALSE]
ip
library('RColorBrewer')
ggplot(exp, aes(Category, abs)) + geom_point()
ggplot(exp, aes(Category, abs)) + geom_point(alpha=.05, color=c('red', 'blue'))
ggplot(exp, aes(Category, abs)) + geom_point(alpha=.05)
ggplot(exp, aes(Category, abs)) + geom_point() + stat.summary(fun.y = sum)
ggplot(exp, aes(Category, abs)) + geom_point() + stat-summary(fun.y = sum)
ggplot(exp, aes(Category, abs)) + geom_point() + stat_summary(fun.y = sum)
ggplot(exp, aes(Category, abs)) + geom_point() + stat_summary(fun.y = sum, geom='pointrange')
ggplot(exp, aes(Month, abs)) + geom_point() + stat_summary(fun.y = sum)
library(gapminder)
install.packages('gapminder')
install.packages('gapminder', dependencies = TRUE)
p <- gapminder %>%
  ggplot( aes(Month, Category, size = abs, color=Subclass)) +
  geom_point() +
  scale_x_log10() +
  theme_bw()
library(gapminder)
p <- gapminder %>%
  ggplot( aes(Month, Category, size = abs, color=Subclass)) +
  geom_point() +
  scale_x_log10() +
  theme_bw()
ggplotly(p)
p <- gapminder %>%
  ggplot(exp, aes(Month, Category, size = abs, color=Subclass)) +
  geom_point() +
  scale_x_log10() +
  theme_bw()
p <- gapminder %>%
  ggplot(aes(exp, Category, size = abs, color=Subclass)) +
  geom_point() +
  scale_x_log10() +
  theme_bw()
ggplotly(p)
p <- gapminder %>%
  ggplot(aes(exp$Month, exp$Category, size = abs, color=Subclass)) +
  geom_point() +
  scale_x_log10() +
  theme_bw()
ggplotly(p)
p <- gapminder %>%
  ggplot(aes(exp$Month, exp$Category, size = abs, color=exp$Subclass)) +
  geom_point() +
  scale_x_log10() +
  theme_bw()
ggplotly(p)
symbols(exp$Month, exp$Category, circles=exp$abs)
library(dplyr)
library(reshape2)
crime <- read.csv('http://datasets.flowingdata.com/crimeRatesByState2005.tsv', header=TRUE, sep='\t')
str(crime)
symbols(crime$murder, crime$burglary, circles=crime$population)
radius <- sqrt( crime$population / pi )
symbols(crime$murder, crime$burglary, cirlces=radius)
symbols(crime$murder, crime$burglary, circles=radius)
symbols(crime$murder, crime$burglary, circles=crime$population)
symbols(crime$murder, crime$burglary, circles=radius)
symbols(crime$murder, crime$burglary, circles=radius, inches=0.35, fg='white', bg = 'red', xlab = 'Murder Rate', ylab = 'Burglary Rate')
text(crime$murder, crime$burglary, crime$state, cex=0.5)
symbols(crime$murder, crime$burglary, circles=radius, inches=0.35, fg='white', bg = 'red', xlab = 'Murder Rate', ylab = 'Burglary Rate', alpha = 0.2)
head(crime)
symbols( exp$Date, exp$Category, exp$abs)
save.image('working')
quit()
load(working)
load(learning.rdata)
load(learning.RData)
ls()
install.packages('flexdashboard')
library('flexdashboard')
rmarkdown::draft('dashboard.Rmd', template='flex_dashboard', package='flexdashboard')
install.packages('shiny', dependencies=TRUE)
library(shiny)
ggplot(exp, aes(Subcat, abs)) + geom_bar()
library(ggplot)
library(ggplot2)
ggplot(exp, aes(Subcat, abs)) + geom_bar()
ggplot(exp, aes(Subcat, abs)) + geom_col()
ggplot(exp, aes(abs, Month, group=Category) + geom_line()
;
ggplot(exp, aes(abs, Month, group=Category)) + geom_line()
ggplot(exp, aes(Month, abs, group=Category)) + geom_line()
ggplot(exp, aes(Month, abs)) + geom_line()
ggplot(exp, aes(Date, abs)) + geom_line()
exp$month <- factor(exp$Date, levels=month.abb)
ggplot(exp, aes(month, abs)) + geom_line()
View(exp$month)
head(exp)
rm(exp$month)
exp$month <- NULL
head(exp)
exp$id <- NULL
head(exp)
ggplot(exp, aes(Month, abs)) + geom_line()
ggplot(exp, aes(Month, abs, group="Category")) + geom_line()
ggplot(exp, aes(Month, abs, group=Category)) + geom_line()
ggplot(exp, aes(Month, abs, group=1)) + geom_line() + facet_grid(Category ~ .)
ggplot(exp, aes(Month, abs, group=1)) + geom_line() + facet_grid(Subclass ~ .)
ggplot(exp, aes(Month, abs, group=Category)) + geom_line() + facet_grid(Subclass ~ .)
ggplot(exp, aes(Month, abs, group=Category)) + geom_line() + facet_grid(Subclass ~ .) + stat_summary(fun.y = sum)
ggplot(exp, aes(Month, abs, group=Category)) + geom_line() + facet_grid(Subclass ~ .) + stat_summary(fun.y = sum, geom='line', color='red')
basic_summ = group_by(exp, Subclass, Category)
library(dplyr)
basic_summ = group_by(exp, Subclass, Category)
View(basic_summ)
basic_summ = summarise(basic_summ, sum_amount = sum(abs))
basic_summ
ggplot(basic_summ, aes(Month, Category, group=Subclass)) + geom_line() + facet_grid(Subclass ~ .)
rm(basic_summ)
basic_summ <- group_by(exp, Month, Subclass, Category, Subcat)
basic_summ
basic_summ = summarise(basic_summ, sum_amount = sum(abs))
basic_summ
ggplot(exp, aes(Month, Category, group = Subclass)) + geom_line()
ggplot(exp, aes(Month, Category)) + geom_line()
ggplot(exp, aes(Month, abs)) + geom_line()
ggplot(exp, aes(Month, sum_amount)) + geom_line()
ggplot(basic_summ, aes(Month, sum_amount)) + geom_line()
save.image('working')
q()
